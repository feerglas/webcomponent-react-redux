{"version":3,"sources":["../node_modules/@stauffacher/sbbpoc/dist/esm/es5/build/equrmrfg.sc.entry.js"],"names":["__webpack_require__","r","__webpack_exports__","d","SbbWebfonts","_sbb_core_js__WEBPACK_IMPORTED_MODULE_0__","t","prototype","render","this","config","JSON","parse","e","version","Object","styles","map","include","name","display","console","log","defineProperty","get","enumerable","configurable","type","String","attr","mutable"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,gCAAAE,IAAA,IAAAC,EAAAL,EAAA,IAEAI,EAAA,WACA,SAAAE,KAEA,OAAAA,EAAAC,UAAAC,OAAA,WACAC,KAAAC,SAAAD,KAAAC,OAAA,yVACA,IAAAJ,EAAAK,KAAAC,MAAAH,KAAAC,QACAG,EAAAP,EAAA,GAAAQ,QACA,OAAAD,EAAeE,OAAAV,EAAA,EAAAU,CAAC,aAAAT,EAAA,GAAAU,OAAAC,IAAA,SAAAX,GAChB,GAAAA,EAAAY,QAAA,0DAAyCZ,EAAAa,KAAA,6DAAqDN,EAAA,WAAAP,EAAAa,KAAA,+EAAAN,EAAA,WAAAP,EAAAa,KAAA,wDAAyNb,EAAAc,QAAA,uBAClTC,QAAAC,IAAA,0FACFP,OAAAQ,eAAAjB,EAAA,MACHkB,IAAA,WACA,sBAEAC,YAAA,EACAC,cAAA,IACGX,OAAAQ,eAAAjB,EAAA,cACHkB,IAAA,WACA,OACAd,OAAA,CACAiB,KAAAC,OACAC,KAAA,SACAC,SAAA,KAIAL,YAAA,EACAC,cAAA,IACGpB,EA5BH","file":"static/js/22.0539f7da.chunk.js","sourcesContent":["import { h } from \"../sbb.core.js\";\n\nvar SbbWebfonts = function () {\n  function t() {}\n\n  return t.prototype.render = function () {\n    this.config || (this.config = '[ { \"version\": \"1_6_subset\" }, { \"styles\": [ { \"name\": \"Roman\", \"include\": true, \"display\": \"fallback\" }, { \"name\": \"Bold\", \"include\": true, \"display\": \"swap\" }, { \"name\": \"Light\", \"include\": true, \"display\": \"swap\" }, { \"name\": \"Ultralight\", \"include\": true, \"display\": \"swap\" }, { \"name\": \"Thin\", \"include\": true, \"display\": \"swap\" } ] } ]');\n    var t = JSON.parse(this.config),\n        e = t[0].version;\n    return e ? h(\"style\", null, t[1].styles.map(function (t) {\n      if (t.include) return \"@font-face {\\n\\t\\t\\t\\t\\t\\t\\tfont-family: 'SBBWeb \" + t.name + \"';\\n\\t\\t\\t\\t\\t\\t\\tsrc: url('https://cdn.app.sbb.ch/fonts/v\" + e + \"/SBBWeb-\" + t.name + \".woff2') format('woff2'),\\n\\t\\t\\t\\t\\t\\t\\turl('https://cdn.app.sbb.ch/fonts/v\" + e + \"/SBBWeb-\" + t.name + \".woff') format('woff');\\n\\t\\t\\t\\t\\t\\t\\tfont-display: \" + t.display + \";\\n\\t\\t\\t\\t\\t\\t}\";\n    })) : (console.log(\"Define the version number of the webfont, please. Use either 1, 1_6 or 1_6_subset\"), !1);\n  }, Object.defineProperty(t, \"is\", {\n    get: function get() {\n      return \"sbb-webfonts\";\n    },\n    enumerable: !0,\n    configurable: !0\n  }), Object.defineProperty(t, \"properties\", {\n    get: function get() {\n      return {\n        config: {\n          type: String,\n          attr: \"config\",\n          mutable: !0\n        }\n      };\n    },\n    enumerable: !0,\n    configurable: !0\n  }), t;\n}();\n\nexport { SbbWebfonts };"],"sourceRoot":""}